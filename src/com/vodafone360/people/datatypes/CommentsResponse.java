package com.vodafone360.people.datatypes;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;
import java.util.Vector;

import com.vodafone360.people.utils.LogUtils;



public class CommentsResponse extends BaseDataType {

	public List<Long> mCommentIdList = new ArrayList<Long>();

	 /**
     * Tags associated with ContactListResponse item.
     */
    private enum Tags {
        COMMENT_ID("commentidlist");

        private final String tag;

        /**
         * Construct Tags item from supplied String
         * 
         * @param s String value for Tags item.
         */
        private Tags(String s) {
            tag = s;
        }

        /**
         * String value for Tags item.
         * 
         * @return String value for Tags item.
         */
        private String tag() {
            return tag;
        }
    }
    /**
     * Find Tags item for specified String
     * 
     * @param tag String value to find Tags item for
     * @return Tags item for specified String, null otherwise
     */
    private Tags findTag(String tag) {
        for (Tags tags : Tags.values()) {
            if (tag.compareTo(tags.tag()) == 0) {
                return tags;
            }
        }
        return null;
    }
    
    /**
     * Create ContactListResponse from Hashtable generated by Hessian-decoder
     * 
     * @param hash Hashtable containing ContactListResponse parameters
     * @return ContactListResponse created from hashtable
     */
    public CommentsResponse createFromHashtable(Hashtable<String, Object> hash) {

        Enumeration<String> e = hash.keys();
        while (e.hasMoreElements()) {
            String key = e.nextElement();
            Tags tag = findTag(key);
            setValue(tag, hash.get(key));
        }
        return this;
    }

    /**
     * Sets the value of the member data item associated with the specified tag.
     * 
     * @param tag Current tag
     * @param value Value associated with the tag
     */
    private void setValue(Tags tag, Object value) {
        if (tag != null) {
        	switch (tag) {
	            case COMMENT_ID:
	            	Vector<Long> vector = (Vector<Long>)value;
	                 for (Long l : vector) {
	                	 mCommentIdList.add(l);
	                 }
	                break;
	            default:
	                break;
	        }
        }
    }

	@Override
	public int getType() {
		return COMMENTS_RESPONSE_DATATYPE;
	}
}
