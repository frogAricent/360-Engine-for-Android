package com.vodafone360.people.datatypes;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;
import java.util.Vector;

import com.vodafone360.people.utils.LogUtils;

public class AlbumResponse extends BaseDataType {
	
		public List<Long> mAlbumList = new ArrayList<Long>();
		
		public int mListSize;
		
		/**
	     * Tags associated with Comment representing data items associated with
	     * Comment returned from server.
	     */
	    public enum Tags {
	    	ALBUM_ID_LIST("albumidlist"),
	    	GROUP_ID_LIST("groupidlist"),
	    	USER_ID("userid");

	        private final String tag;

	        /**
	         * Constructor creating Tags item for specified String.
	         * 
	         * @param s String value for Tags item.
	         */
	        private Tags(String s) {
	            tag = s;
	        }

	        /**
	         * String value associated with Tags item.
	         * 
	         * @return String value for Tags item.
	         */
	        private String tag() {
	            return tag;
	        }

	        /**
	         * Find Tags item for specified String.
	         * 
	         * @param tag String value to find Tags item for
	         * @return Tags item for specified String, null otherwise
	         */
	        private static Tags findTag(String tag) {
	            for (Tags tags : Tags.values()) {
	                if (tag.compareTo(tags.tag()) == 0) {
	                    return tags;
	                }
	            }
	            return null;
	        }
	    }
	    
	    private Tags findTag(String tag) {
	        for (Tags tags : Tags.values()) {
	            if (tag.compareTo(tags.tag()) == 0) {
	                return tags;
	            }
	        }
	        return null;
	    }
	    
	    /**
	     * Sets the value of the member data item associated with the specified tag.
	     * 
	     * @param tag Current tag
	     * @param val Value associated with the tag
	     */
	    private void setValue(Tags tag, Object value) {
	        if (tag != null) {
	            switch (tag) {
	                case ALBUM_ID_LIST:
	                	Vector<Long> albumIdVector = (Vector<Long>)value;
		                 for (Long l : albumIdVector) {
		                	 mAlbumList.add(l);
		                 }
		                 this.mListSize = mAlbumList.size();
	                     break;
	                     
	                case GROUP_ID_LIST:
	                	Vector<Long> groupIdVector = (Vector<Long>)value;
		                 for (Long l : groupIdVector) {
		                	 mAlbumList.add(l);
		                 }
		                 this.mListSize = mAlbumList.size();
	                	break;
	                	
	                case USER_ID:
	                	Long usrid = new Long((Long)value);
		                mAlbumList.add(usrid);
		                this.mListSize = mAlbumList.size();
	                	break;
	                
	                default:
	                    // Do nothing.
	                    break;
	            }
	        }
	    }

		 /**
	     * Create ActivityItem from HashTable generated by Hessian-decoder
	     * 
	     * @param hash Hashtable representing ActivityItem
	     * @return ActivityItem created from Hashtable
	     */
	    public AlbumResponse createFromHashtable(Hashtable<String, Object> hash) {
	    	AlbumResponse album = new AlbumResponse();
	        Enumeration<String> e = hash.keys();
	        while (e.hasMoreElements()) {
	            String key = e.nextElement();
	            Object value = hash.get(key);
	            Tags tag = Tags.findTag(key);
	            album.setValue(tag, value);
	        }
	        return album;
	    }

		@Override
		public int getType() {
			return ALBUM_RESPONSE_DATATYPE;
		}
	    
	}

