package com.vodafone360.people.datatypes;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;
import java.util.Vector;


public class AlbumListResponse extends BaseDataType {

	 /**
     * Tags associated with ContactListResponse item.
     */
    private enum Tags {
        ALBUM_LIST("albumlist"),
        ITEMS("items"),
        UPDATED("updated");

        private final String tag;

        /**
         * Construct Tags item from supplied String
         * 
         * @param s String value for Tags item.
         */
        private Tags(String s) {
            tag = s;
        }

        /**
         * String value for Tags item.
         * 
         * @return String value for Tags item.
         */
        private String tag() {
            return tag;
        }
    }

    /**
     * Find Tags item for specified String
     * 
     * @param tag String value to find Tags item for
     * @return Tags item for specified String, null otherwise
     */
    private Tags findTag(String tag) {
        for (Tags tags : Tags.values()) {
            if (tag.compareTo(tags.tag()) == 0) {
                return tags;
            }
        }
        return null;
    }

    public List<Album> mAlbumList = new ArrayList<Album>();

    public Integer mItems = null;

    public Long mUpdated = null;

   
    /**
     * Create AlbumListResponse from Hashtable generated by Hessian-decoder
     * 
     * @param hash Hashtable containing AlbumListResponse parameters
     * @return AlbumListResponse created from hashtable
     */
    public AlbumListResponse createFromHashTable(Hashtable<String, Object> hash) {

        Enumeration<String> e = hash.keys();
        while (e.hasMoreElements()) {
            String key = e.nextElement();
            Tags tag = findTag(key);
            setValue(tag, hash.get(key));
        }
        return this;
    }

    /**
     * Sets the value of the member data item associated with the specified tag.
     * 
     * @param tag Current tag
     * @param value Value associated with the tag
     */
    private void setValue(Tags tag, Object value) {
        switch (tag) {
            case ALBUM_LIST:
            	Vector<Hashtable<String, Object>> albumsVector = (Vector<Hashtable<String, Object>>)value;
                for (Hashtable<String, Object> hash : albumsVector) {
               	 	Album album = new Album();
                    album = album.createFromHashtable(hash);
                    mAlbumList.add(album);
	            }
	            break;
            case ITEMS:
                if (mItems == null) {
                	mItems = (Integer) value;
                }
                break;
            case UPDATED:
                if (mUpdated == null) {
                	mUpdated = (Long)value;
                }
                break;
            default:
                break;
        }
    }

	@Override
	public int getType() {
		return ALBUM_LIST_RESPONSE_DATATYPE;
	}

}
