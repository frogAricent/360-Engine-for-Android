package com.vodafone360.people.datatypes;

import java.util.Enumeration;
import java.util.Hashtable;


public class StoreItem extends BaseDataType{

	
	public String itemid = null;
	
	public String type;
	
	public String name;
	
	public boolean dynamic;
	
	public Integer nrofitems;
	
	public Integer startindex = 0;
	
	/**
	 * Tags associated with Comment representing data items associated with
	 * Comment returned from server.
	 */
	public enum Tags {
		ITEM_ID("itemid"), TYPE("type"), NAME("name"), NR_OF_ITEMS(
				"nrofitems"), START_INDEX("startindex"),DYNAMIC("dynamic");

		private final String tag;

		/**
		 * Constructor creating Tags item for specified String.
		 * 
		 * @param s
		 *            String value for Tags item.
		 */
		private Tags(String s) {
			tag = s;
		}

		/**
		 * String value associated with Tags item.
		 * 
		 * @return String value for Tags item.
		 */
		private String tag() {
			return tag;
		}

		/**
		 * Find Tags item for specified String.
		 * 
		 * @param tag
		 *            String value to find Tags item for
		 * @return Tags item for specified String, null otherwise
		 */
		private static Tags findTag(String tag) {
			for (Tags tags : Tags.values()) {
				if (tag.compareTo(tags.tag()) == 0) {
					return tags;
				}
			}
			return null;
		}
	}


	/**
	 * Sets the value of the member data item associated with the specified tag.
	 * 
	 * @param tag
	 *            Current tag
	 * @param val
	 *            Value associated with the tag
	 * @return void
	 */
	private void setValue(Tags tag, Object value) {
		if (tag != null) {
			switch (tag) {
			case ITEM_ID:
				itemid = (String) value;
				break;

			case TYPE:
				type = (String)value;
				break;

			case NAME:
				name = (String) value;
				break;

			case NR_OF_ITEMS:
				nrofitems = (Integer) value;
				break;

			case DYNAMIC:
				dynamic = (Boolean) value;
				break;
				
			case START_INDEX : 
				startindex = (Integer)value;

			default:
				// Do nothing.
				break;
			}
		}
	}

	/**
	 * Create ActivityItem from HashTable generated by Hessian-decoder
	 * 
	 * @param hash
	 *            Hashtable representing ActivityItem
	 * @return ActivityItem created from Hashtable
	 */
	static public StoreItem createFromHashtable(Hashtable<String, Object> hash) {
		StoreItem storeItem = new StoreItem();
		Enumeration<String> e = hash.keys();
		while (e.hasMoreElements()) {
			String key = e.nextElement();
			Object value = hash.get(key);
			Tags tag = Tags.findTag(key);
			storeItem.setValue(tag, value);
		}
		return storeItem;
	}

	/**
	 * Create Hashtable from GroupItem parameters.
	 * 
	 * @param none
	 * @return Hashtable generated from GroupItem parameters.
	 */
	public Hashtable<String, Object> createHashtable() {
		Hashtable<String, Object> htab = new Hashtable<String, Object>();

		if (itemid != null) {
			htab.put(Tags.ITEM_ID.tag(), itemid);
		}
		if (type != null) {
			htab.put(Tags.TYPE.tag(), type);
		}
		if (nrofitems != null) {
			htab.put(Tags.NR_OF_ITEMS.tag(), nrofitems);
		}
		if (name != null) {
			htab.put(Tags.NAME.tag(), name);
		}
		if (startindex != null) {
			htab.put(Tags.START_INDEX.tag(), startindex);
		}
		return htab;
	}

	@Override
	public int getType() {
		// TODO Auto-generated method stub
		return 0;
	}
	

}
